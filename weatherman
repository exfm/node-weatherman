#!/usr/bin/env node

"use strict";

var sequence = require('sequence'),
	when = require('when'),
	fs = require('fs'),
	os = require('os'),
	nconf = require('nconf'),
	getConfig = require('junto'),
	aws = require('plata');

var plugins = {
		'system': require('./plugins/system'),
		'rabbit': require('./plugins/rabbit')
	},
	config;

getConfig('development').then(function(c){
	config = c;
	aws.connect(config.aws);
});

nconf.file({'file': 'config.json'});
var namespace = nconf.get('namespace');

generateMetrics();
setInterval(function(){
	generateMetrics();
}, nconf.get('interval')*1000);

function generateMetrics(){
	var metrics = [],
		timestamp = new Date().toISOString();
	nconf.get('active_plugins').forEach(function(plugin){
		plugins[plugin].addMetrics(metrics, timestamp, nconf.get('plugin_opts')).then(function(data){
			sendMetricsToCloudWatch(data).then(function(resp){
				console.log(resp);
			});
		})
	});
}

function sendMetricsToCloudWatch(metrics){
	var d = when.defer();
	sequence().then(function(next){
		aws.onConnected(next);
	}).then(function(next){
		// console.log(JSON.stringify(metrics, null, 4));
		aws.cloudWatch.putMetricData(namespace, metrics).then(next);
	}).then(function(next, data){
		d.resolve(data);
	});
	return d.promise;
}